/* Define global animation variables */
:root {
  --animation-duration: 1s;
  --animation-delay: 1s;
  --animation-iteration-count: 1;
}

/* Base animation class for all elements */
.animation {
  animation-duration: var(--animation-duration);
}

/* Classes to set animation duration */
.duration-1 {
  animation-duration: var(--animation-duration); /* Default duration */
}
.duration-2 {
  animation-duration: calc(var(--animation-duration) * 2);
}
...
.duration-10 {
  animation-duration: calc(var(--animation-duration) * 10);
}

/* Classes to set animation delay */
.delay-1 {
  animation-delay: var(--animation-delay); /* Default delay */
}
.delay-2 {
  animation-delay: calc(var(--animation-delay) * 2);
}
...
.delay-10 {
  animation-delay: calc(var(--animation-delay) * 10);
}

/* Classes to set animation iteration count */
.infinite {
  animation-iteration-count: infinite;
}
.iteration {
  animation-iteration-count: var(--animation-iteration-count); /* Default iteration count */
}
.iteration-2 {
  animation-iteration-count: calc(var(--animation-iteration-count) * 2);
}
...
.iteration-10 {
  animation-iteration-count: calc(var(--animation-iteration-count) * 10);
}

/* Classes to set animation timing function */
.ease {
  animation-timing-function: ease;
}
.ease-in {
  animation-timing-function: ease-in;
}
.ease-out {
  animation-timing-function: ease-out;
}
.ease-in-out {
  animation-timing-function: ease-in-out;
}
.linear {
  animation-timing-function: linear;
}

/* Define various animation effects */
.fadeOut {
  animation-name: fadeOut;
}
@keyframes fadeOut {
  to {
    opacity: 0;
  }
}

.fadeIn {
  animation-name: fadeIn;
}
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 100;
  }
}

.leftIn {
  animation-name: leftIn;
}
@keyframes leftIn {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0%);
  }
}

.rightIn {
  animation-name: rightIn;
}
@keyframes rightIn {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0%);
  }
}

.topIn {
  animation-name: topIn;
}
@keyframes topIn {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0%);
  }
}

.bottomIn {
  animation-name: bottomIn;
}
@keyframes bottomIn {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0%);
  }
}

.leftOut {
  animation-name: leftOut;
}
@keyframes leftOut {
  from {
    transform: translateX(0%);
  }
  to {
    transform: translateX(-100%);
  }
}

.rightOut {
  animation-name: rightOut;
}
@keyframes rightOut {
  from {
    transform: translateX(0%);
  }
  to {
    transform: translateX(100%);
  }
}

.topOut {
  animation-name: topOut;
}
@keyframes topOut {
  from {
    transform: translateY(0%);
  }
  to {
    transform: translateY(-100%);
  }
}

.bottomOut {
  animation-name: bottomOut;
}
@keyframes bottomOut {
  from {
    transform: translateY(0%);
  }
  to {
    transform: translateY(100%);
  }
}

.spin {
  animation-name: spin;
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.zoomInOut {
  animation-name: zoomInOut;
}
@keyframes zoomInOut {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

.float {
  animation-name: float;
}
@keyframes float {
  0% {
    transform: translatey(-5px);
  }
  50% {
    transform: translatey(5px);
  }
  100% {
    transform: translatey(-5px);
  }
}

.shake {
  animation-name: shake;
}
@keyframes shake {
  25% {
    transform: rotate(3deg);
  }
  50% {
    transform: rotate(-3deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

/* Special animation for reveal effect */
.baseanimation {
  overflow: hidden;
  line-height: 1;
}
.animation .revealBottom {
  display: block;
  animation-name: reveal;
  animation-timing-function: cubic-bezier(0.77, 0, 0.175, 1);
